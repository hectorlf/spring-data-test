subprojects {

   apply plugin: 'java'

   tasks.withType(JavaCompile) {
      options.incremental = true
      sourceCompatibility = '1.7'
      targetCompatibility = '1.7'
   }

   repositories {
      mavenCentral()
      flatDir { dirs '../lib' }
   }

   dependencies {
      compile 'org.slf4j:slf4j-api:1.7.10'
      compile 'javax.validation:validation-api:1.0.0.GA'
      compile 'org.slf4j:jcl-over-slf4j:1.7.10'
      compile 'ch.qos.logback:logback-classic:1.1.2'
   }

   configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
         if (details.requested.group == 'org.hsqldb') {
            details.useVersion '2.3.2'
         } else if (details.requested.group == 'javax.inject') {
            details.useVersion '1'
         } else if (details.requested.group == 'commons-logging') {
            details.useVersion '1.1.3'
         } else if (details.requested.group == 'org.springframework') {
            details.useVersion '4.1.6.RELEASE'
         } else if (details.requested.group == 'org.springframework.data') {
            if (details.requested.name == 'spring-data-jpa') {
               details.useVersion '1.8.0.RELEASE'
            }
         } else if (details.requested.group == 'org.thymeleaf') {
            details.useVersion '2.1.4.RELEASE'
         } else if (details.requested.group == 'org.apache.bval') {
            details.useVersion '0.5'
         } else if (details.requested.group == 'org.aspectj') {
            details.useVersion '1.8.5'
         } else if (details.requested.group == 'junit') {
            details.useVersion '4.12'
         } else if (details.requested.group == 'javax.servlet') {
            details.useVersion '3.0.1'
         } else if (details.requested.group == 'org.eclipse.persistence') {
            if (details.requested.name == 'javax.persistence') {
               details.useVersion '2.1.0'
            } else {
               details.useVersion '2.6.0'
            }
         } else if (details.requested.group == 'org.mockito') {
            details.useVersion '2.0.5-beta'
         }
      }
   }


   // jetty-runner alias
   task run { outputs.upToDateWhen { false } }

}





// Gradle wrapper task
// Only used when in need to reinstall the wrapper
task wrapper(type: Wrapper) {
   gradleVersion = '2.3'
}
